<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>